<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>